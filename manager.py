import os
import getpass
import secrets
import string
import pyperclip
import time
from rich.console import Console
from rich.panel import Panel
from rich.progress import Progress
from rich import box
from questionary import select, prompt, Style
from crypto import derive_key, clear_password
from db import (
    init_db, add_password, get_password, backup_db,
    export_data, import_data, get_all_services,
    update_password, delete_password
)

SALT_FILE = os.path.join(os.path.expanduser("~"), ".passman_salt.bin")
console = Console()

# –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å—Ç–∏–ª—å –¥–ª—è questionary
custom_style = Style([
    ('qmark', 'fg:#00ffff bold'),
    ('selected', 'fg:#00ff00 bold'),
    ('pointer', 'fg:#ff00ff bold'),
    ('highlighted', 'fg:#ffff00 bold'),
])


def get_salt():
    if not os.path.exists(SALT_FILE):
        salt = os.urandom(16)
        with open(SALT_FILE, "wb") as f:
            f.write(salt)
    else:
        with open(SALT_FILE, "rb") as f:
            salt = f.read()
    return salt


def get_key():
    master_password = getpass.getpass("üîë –í–≤–µ–¥–∏—Ç–µ –º–∞—Å—Ç–µ—Ä-–ø–∞—Ä–æ–ª—å: ")
    return derive_key(master_password, get_salt())


def generate_password(length=16):
    chars = string.ascii_letters + string.digits + "!@#$%^&*"
    return ''.join(secrets.choice(chars) for _ in range(length))


def check_password_strength(password):
    if len(password) < 8:
        return "—Å–ª–∞–±—ã–π"
    elif not (any(c.isupper() for c in password) and any(c.isdigit() for c in password)):
        return "—Å—Ä–µ–¥–Ω–∏–π"
    return "—Å–∏–ª—å–Ω—ã–π"


def print_banner():
    banner = """
    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó
    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë
    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë
    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë
    ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë
    ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù
    """
    console.print(Panel.fit(
        f"[bold cyan]{banner}[/bold cyan]",
        border_style="bright_yellow",
        padding=(1, 4),
        subtitle="[blink]v2.2[/blink] [white]Secure Password Management[/white]"
    ))


def animated_loading(text="–ó–∞–≥—Ä—É–∑–∫–∞..."):
    with Progress(transient=True) as progress:
        task = progress.add_task(f"[cyan]{text}", total=10)
        while not progress.finished:
            progress.update(task, advance=0.5)
            time.sleep(0.04)


def print_info():
    info_text = """
    [bold cyan]Password Manager v2.2[/bold cyan]
    üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π —Å –≤–æ–µ–Ω–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è

    [bold yellow]–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:[/bold yellow]
    ‚Ä¢ –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å—Ç—Ä–µ–ª–∫–∞–º–∏
    ‚Ä¢ AES-256-GCM —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
    ‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º—ã –≤–≤–æ–¥–∞
    ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª–æ–∂–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π
    ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä

    [bold green]–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:[/bold green]
    ‚Üë/‚Üì - –í—ã–±–æ—Ä –ø—É–Ω–∫—Ç–∞
    Enter - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
    Ctrl+C - –í—ã—Ö–æ–¥
    """
    console.print(Panel.fit(info_text, title="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", border_style="cyan"))


def main_menu():
    return select(
        message="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        choices=[
            {"name": "üóù  –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å", "value": "1"},
            {"name": "üîç  –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª—å", "value": "2"},
            {"name": "üé≤  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å", "value": "3"},
            {"name": "‚úèÔ∏è  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å", "value": "4"},
            {"name": "üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å", "value": "5"},
            {"name": "üíæ –ë—ç–∫–∞–ø –¥–∞–Ω–Ω—ã—Ö", "value": "6"},
            {"name": "üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", "value": "7"},
            {"name": "üì• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", "value": "8"},
            {"name": "‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "value": "9"},
            {"name": "üö™ –í—ã—Ö–æ–¥", "value": "0"}
        ],
        qmark="‚û§",
        style=custom_style,
        use_arrow_keys=True
    )


def interactive_manager():
    print_banner()
    animated_loading("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...")
    init_db()
    key = get_key()

    while True:
        action = main_menu().ask()

        if action == "1":
            answers = prompt([
                {
                    'type': 'text',
                    'name': 'service',
                    'message': 'üåê –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞:',
                    'qmark': '‚û§',
                    'style': custom_style
                },
                {
                    'type': 'text',
                    'name': 'username',
                    'message': 'üë§ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:',
                    'qmark': '‚û§',
                    'style': custom_style
                },
                {
                    'type': 'password',
                    'name': 'password',
                    'message': 'üîí –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:',
                    'qmark': '‚û§',
                    'style': custom_style
                }
            ], style=custom_style)

            strength = check_password_strength(answers['password'])
            console.print(
                f"üõ°Ô∏è –£—Ä–æ–≤–µ–Ω—å –∑–∞—â–∏—Ç—ã: [bold {'red' if strength == '—Å–ª–∞–±—ã–π' else 'yellow' if strength == '—Å—Ä–µ–¥–Ω–∏–π' else 'green'}]{strength.upper()}[/]")

            with console.status("[bold green]–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...[/]", spinner="bouncingBall"):
                add_password(answers['service'], answers['username'], answers['password'], key)
                clear_password(answers['password'])
                time.sleep(1)
            console.print(Panel.fit("‚úÖ [bold green]–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞![/]", border_style="green"))

        elif action == "2":
            services = get_all_services()
            if not services:
                console.print(Panel("[red]‚ö†Ô∏è –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤[/red]", border_style="red"))
                continue

            selected_service = select(
                message="üìã –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å:",
                choices=services,
                style=custom_style,
                use_arrow_keys=True,
                qmark="‚û§"
            ).ask()

            with console.status("[cyan]–ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏...[/]", spinner="dots"):
                result = get_password(selected_service, key)
                time.sleep(0.5)

            if result:
                pyperclip.copy(result['password'].decode())
                console.print(
                    Panel.fit(
                        f"üîë [bold green]{selected_service}[/]\n"
                        f"üë§ –õ–æ–≥–∏–Ω: [yellow]{result['username']}[/]\n"
                        f"üìã –ü–∞—Ä–æ–ª—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä!",
                        border_style="green"
                    )
                )
                clear_password(result['password'])
            else:
                console.print(Panel("[red]‚ö†Ô∏è –ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞[/red]", border_style="red"))

        elif action == "3":
            answers = prompt([
                {
                    'type': 'text',
                    'name': 'service',
                    'message': 'üåê –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞:',
                    'qmark': '‚û§',
                    'style': custom_style
                },
                {
                    'type': 'text',
                    'name': 'username',
                    'message': 'üë§ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:',
                    'qmark': '‚û§',
                    'style': custom_style
                }
            ], style=custom_style)

            password = generate_password()
            with console.status("[yellow]–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è...[/]", spinner="dots12"):
                add_password(answers['service'], answers['username'], password, key)
                pyperclip.copy(password)
                time.sleep(1)

            console.print(
                Panel.fit(
                    f"üî¢ [bold]{password}[/]\n"
                    f"üìã –ü–∞—Ä–æ–ª—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä!",
                    title="üéâ –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å",
                    border_style="yellow"
                )
            )
            clear_password(password)

        elif action == "4":
            service = select(
                message="üåê –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
                choices=get_all_services(),
                style=custom_style,
                use_arrow_keys=True,
                qmark="‚û§"
            ).ask()

            new_password = prompt([{
                'type': 'password',
                'name': 'password',
                'message': 'üîí –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:',
                'qmark': '‚û§',
                'style': custom_style
            }], style=custom_style)['password']

            with console.status("[blue]–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏...[/]", spinner="toggle"):
                update_password(service, new_password, key)
                time.sleep(1)
            console.print(Panel.fit("‚úÖ [bold green]–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω[/]", border_style="green"))
            clear_password(new_password)

        elif action == "5":
            service = select(
                message="üåê –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:",
                choices=get_all_services(),
                style=custom_style,
                use_arrow_keys=True,
                qmark="‚û§"
            ).ask()

            with console.status("[red]–£–¥–∞–ª–µ–Ω–∏–µ...[/]", spinner="bouncingBar"):
                delete_password(service)
                time.sleep(0.7)
            console.print(Panel.fit("üóëÔ∏è [bold red]–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞[/]", border_style="red"))

        elif action == "6":
            with console.status("[magenta]–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞...[/]", spinner="moon"):
                backup_db()
                time.sleep(1)
            console.print(Panel.fit("üíæ [bold green]–ë—ç–∫–∞–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω[/]", border_style="green"))

        elif action == "7":
            export_data()
            console.print(Panel.fit("üì§ [bold green]–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ export.json[/]", border_style="green"))

        elif action == "8":
            import_data()
            console.print(Panel.fit("üì• [bold green]–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã[/]", border_style="green"))

        elif action == "9":
            print_info()

        elif action == "0":
            console.print(Panel.fit("[bold magenta]üëã –î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á![/]", border_style="magenta"))
            break


if __name__ == "__main__":
    interactive_manager()